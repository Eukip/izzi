# Generated by Django 3.2 on 2021-04-26 08:02

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import users.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone', models.CharField(db_index=True, max_length=20, null=True, unique=True, validators=[django.core.validators.RegexValidator(message='Номер телефона должен быть введен в формате: "+999999999999". Допускается от 10 до 20 цифр.', regex='^\\+?1?\\d{10,20}$')], verbose_name='номер телефона')),
                ('is_partner', models.BooleanField(default=False, verbose_name='Является партнером?')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
            },
            managers=[
                ('objects', users.managers.UserCustomManager()),
            ],
        ),
        migrations.CreateModel(
            name='PartnerCompany',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('confirmed', models.BooleanField(blank=True, choices=[(None, 'На рассмотрении'), (True, 'Подтверждён'), (False, 'Отклонён')], default=None, help_text='модератор подтверждает компанию пользователя, далее пользователь становится партнёром', null=True, verbose_name='Подтвержден?')),
                ('logo', models.FileField(help_text='поддерживаемые форматы svg, png, jpg, jpeg', upload_to='', validators=[django.core.validators.FileExtensionValidator(['svg', 'png', 'jpg', 'jpeg', 'web', 'webp'])], verbose_name='Логотип')),
                ('web_site', models.URLField()),
                ('email', models.EmailField(max_length=254, verbose_name='E-mail')),
                ('phone1', models.CharField(max_length=20, verbose_name='Номер телефона 1')),
                ('phone2', models.CharField(blank=True, max_length=20, verbose_name='Номер телефона 2')),
                ('phone3', models.CharField(blank=True, max_length=20, verbose_name='Номер телефона 3')),
                ('company_name', models.CharField(max_length=150, verbose_name='Название вашей компании')),
                ('description', models.TextField(max_length=1000, verbose_name='Описание')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='partner', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Компания партнера',
                'verbose_name_plural': 'Компании партнеров',
            },
        ),
        migrations.CreateModel(
            name='PartnerNetwork',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('instagram', models.URLField(blank=True)),
                ('facebook', models.URLField(blank=True)),
                ('whatsapp', models.URLField(blank=True)),
                ('telegram', models.URLField(blank=True)),
                ('vkontakte', models.URLField(blank=True, verbose_name='Вконтакте')),
                ('odnoklassniki', models.URLField(blank=True, verbose_name='Одноклассники')),
                ('partner', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='network', to='users.partnercompany', verbose_name='Комания партнера')),
            ],
            options={
                'verbose_name': 'Социальные сети партнера',
                'verbose_name_plural': 'Социальные сети партнеров',
            },
        ),
    ]
